#Python script to generate a list of all active distribution lists along with its members and owners
# Pre requisites - obtain MS Graph API key secret, tenant ID and, client ID

import pip._vendor.requests
from pip._vendor import requests
import csv
import getpass  # Import the getpass module for secure password input

# Get credentials from user input
TENANT_ID = input("Enter your Tenant ID: ")
CLIENT_ID = input("Enter your Client ID: ")
CLIENT_SECRET = getpass.getpass("Enter your Client Secret: ")
TOKEN_ENDPOINT = f'https://login.microsoftonline.com/{TENANT_ID}/oauth2/v2.0/token'
GROUPS_ENDPOINT = 'https://graph.microsoft.com/v1.0/groups?$filter=mailEnabled eq true and securityEnabled eq false'

# Get the access token
def get_access_token():
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded'
    }
    body = {
        'client_id': CLIENT_ID,
        'scope': 'https://graph.microsoft.com/.default',
        'client_secret': CLIENT_SECRET,
        'grant_type': 'client_credentials'
    }
    response = requests.post(TOKEN_ENDPOINT, headers=headers, data=body)
    if response.status_code == 200:
        return response.json().get('access_token', None)
    else:
        print(f"Failed to get access token: {response.text}")
        return None

# Make a request to the Microsoft Graph API
def make_api_call(method, url, token, data=None):
    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json'
    }
    response = requests.request(method, url, headers=headers, json=data)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"API Call failed: {response.text}")
        return {'value': []}

# Write data to CSV file
def write_to_csv(groups_info):
    with open('distribution_groups.csv', mode='w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow(['Group ID', 'Group Display Name', 'Owners', 'Members'])
        for group in groups_info:
            writer.writerow([group['id'], group['displayName'], group['owners'], group['members']])

def main():
    token = get_access_token()
    if token:
        groups_response = make_api_call('GET', GROUPS_ENDPOINT, token)
        groups_info = []

        for group in groups_response.get('value', []):
            group_id = group['id']
            group_display_name = group['displayName']
            
            # Get group members
            members_response = make_api_call('GET', f'https://graph.microsoft.com/v1.0/groups/{group_id}/members', token)
            members = ', '.join([member.get('mail', 'No Email Provided') for member in members_response.get('value', [])])

            # Get group owners
            owners_response = make_api_call('GET', f'https://graph.microsoft.com/v1.0/groups/{group_id}/owners', token)
            owners = ', '.join([owner.get('mail', 'No Email Provided') for owner in owners_response.get('value', [])])

            groups_info.append({
                'id': group_id,
                'displayName': group_display_name,
                'owners': owners,
                'members': members
            })

        if groups_info:
            write_to_csv(groups_info)
            print("Data has been written to distribution_groups.csv")
        else:
            print("No group data to write.")
    else:
        print("Failed to retrieve access token.")

if __name__ == "__main__":
    main()
